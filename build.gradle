plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
}

dependencies {
    // Fabric
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fapi_version}"

    // HWID
    implementation 'com.github.oshi:oshi-core:5.5.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    // Events
    implementation 'com.github.MeteorDevelopment:orbit:0.1.6'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    dependencies {
        include(dependency("org.yaml:snakeyaml"))
        include(dependency("net.jodah:typetools"))
        include(dependency("com.github.MeteorDevelopment:orbit"))
        include(dependency("com.github.oshi:oshi-core"))
        include(dependency("net.java.dev.jna:jna"))
        include(dependency("net.java.dev.jna:jna-platform"))
        include(dependency("org.slf4j:slf4j-api"))
    }
    classifier = 'release'
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}
